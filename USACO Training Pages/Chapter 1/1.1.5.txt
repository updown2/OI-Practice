/*
ID: riya.ar1
PROG: beads
LANG: C++
*/
#include <iostream>
#include <fstream>
#include <string>

using namespace std;

//Declair global variables

int necklace_length;
int t;
string necklace[1000];



string next(int start) {
	int go;
	go = 1;
	int j = start;
	string at;
	while (go == 1) {
		if (j >= necklace_length * 2) {
			at = "w";
			go = 0;
		}
		else if (necklace[j] == "w") {
			int asdfghjk;
		}
		else {
			at = necklace[j];
			go = 0;
		}
		j ++;
	}
	return at;
}

int main() {
    ofstream fout ("beads.out");
    ifstream fin ("beads.in");
 
	//Create necklace and read input
    fin >> necklace_length;  //CHANGE
    string nn_base;
    fin >> nn_base; //CHANGE
    for (int i = 0; i < necklace_length; i++) {
    	necklace[i] = necklace[necklace_length + i] = nn_base[i];
    }
	
	//Algo
	t = 0;
	int rt[2];
	rt[0] = 0;
	rt[1] = 0;
	int max = 0;
	int go2;
	int start;
	start = 0;
	
	string at;
	at = next(0);
	
	string current;
	for (int i = 0; i < necklace_length * 2; i++) {
		current = necklace[i];
		if (current == at) {
			rt[1] += 1;
			
		}
		else if (current == "w") {
			rt[1] += 1;
		}
		else {
			if (rt[0] + rt[1] > max) {
				max = rt[0] + rt[1];
			}
			
			t += rt[1];
			rt[0] = rt[1];
			rt[1] = 1;
			at = next(t);
			
			go2 = 0;
			int j;
			j = start-2;
			while (go2==0) {
				if (j >= 0) {
					if (necklace[j] == "w") {
						rt[0] += 1;
						
					}
					else {
						go2 = 1;
					}
				}
				else {
					go2 = 1;
				}
				j--;
			}
			start = i+1;
		}
	}
	
	if (rt[0] + rt[1] > max) {
		max = rt[0] + rt[1];
	}
	if (max >= necklace_length) {
		max = necklace_length;
	}
	fout << max << endl;  //CHANGE
 
    return 0;
}