/*
ID: riya.ar1
PROG: sort3
LANG: C++11
*/
#include <iostream>
#include <fstream>
#include <string>

using namespace std;

int main() {
    ofstream fout ("sort3.out");
    ifstream fin ("sort3.in");

    //Declare Variables and Read Input
    int N;
    fin >> N;  //CHANGE
	int out = 0;
	
	int order[1000];
	int one = 0;
	int two = 0;
	int three = 0;
	
	for (int i=0; i<N; i++) {
		fin >> order[i];
		if (order[i] == 1) {
			one ++;
		}
		if (order[i] == 2) {
			two ++;
		}
		if (order[i] == 3) {
			three ++;
		}
	}
	
	int wrong[][2] = {{0, 0}, {0, 0}, {0, 0}};
	
	//Algo
	//Set up info
	for (int i=0; i<one; i++) {
		if (order[i] == 2) {
			wrong[0][0] ++;
		}
		else if (order[i] == 3) {
			wrong[0][1] ++;
		}
	}
	for (int i=one; i<two+one; i++) {
		if (order[i] == 1) {
			wrong[1][0] ++;
		}
		else if (order[i] == 3) {
			wrong[1][1] ++;
		}
	}
	for (int i=two+one; i<one+two+three; i++) {
		if (order[i] == 1) {
			wrong[2][0] ++;
		}
		else if (order[i] == 2) {
			wrong[2][1] ++;
		}
	}
	
	//Read info and caculate answer
	int current = min(wrong[0][0], wrong[1][0]);
	out += current; //1-2
	wrong[0][0] -= current; wrong[1][0] -= current;
	
	current = min(wrong[0][1], wrong[2][0]);
	out += current; //1-3
	wrong[0][1] -=current; wrong[2][0] -= current;
	
	current = min(wrong[1][1], wrong[2][1]);
	out += current; //2-3
	wrong[1][1] -= current; wrong[2][1] -= current;
	
	out += 2*(wrong[0][0]+wrong[0][1] + wrong[1][0]+wrong[1][1] + wrong[2][0]+wrong[2][1])/3;

    //Output Answer
    fout << out << endl;  //CHANGE
    return 0;
}

