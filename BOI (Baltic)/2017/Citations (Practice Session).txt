/*
dp on a tree
greedily pick the order or books under you by sorting by tim[i]/num_books[i]
*/
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define For(i, a, b) for(int i=a; i<b; i++)
#define ffi For(i, 0, N)
#define ffj For(j, 0, N)
#define ffa ffi ffj
#define s <<" "<<
#define w cout
#define e "\n"
#define pb push_back
#define mp make_pair
#define a first
#define b second
#define int ll
const int MAXN=100000, INF=10000000000;
///500,000,000
int N, K[MAXN], pen[MAXN], tim[MAXN], b[MAXN], loc;
vector<int> adj[MAXN];
pair<double, int> sss[MAXN]; /// (tim[i]/b[i], i)

void go (int at) {
	b[at] = 1;
	tim[at] = 1+K[at];
	for (int i: adj[at]) {
        go(i);
        tim[at] += tim[i];
        b[at] += b[i];
        pen[at] += pen[i];
    }
    loc = 0;
    for (int i: adj[at]) {
        sss[loc] = mp(tim[i]/(double)b[i], i);
        loc++;
    }
    sort(sss, sss+loc);
    int rt = 1;
    //w<< "at" s at+1<<e;
    For (i, 0, loc) {
        pen[at] += b[sss[i].b]*rt;
        //w<< "got" s sss[i].b+1 s ":" s b[sss[i].b] s rt<<e;
        rt += tim[sss[i].b];
    }
    //w<< at+1 s ":" s tim[at]<<e;
    //w<< at+1 s ":" s b[at]<<e;
	pen[at] += tim[at];
	//w<< at+1 s ":" s pen[at]<<e;
}

main() {
    //ifstream cin("test.in");
	ios_base::sync_with_stdio(0); cin.tie(0);
	cin >> N;
	ffi {
		int a; cin >> K[i] >> a;
		For (j, 0, a) {int b; cin >> b; b--; adj[i].pb(b);}
	}
	go(0);
	w<< pen[0]<<e;
}