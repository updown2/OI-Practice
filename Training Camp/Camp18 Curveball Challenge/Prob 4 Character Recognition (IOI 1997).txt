#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define For(i, a, b) for(int i=a; i<b; i++)
#define ffi For(i, 0, N)
#define ffj For(j, 0, M)
#define ffa ffi ffj
#define s <<" "<<
#define w cout
#define e endl
#define pb push_back
#define mp make_pair
#define a first
#define b second
#define int ll
//500,000,000 operations
const int INF = 10000000000;
//Global Variables
int N;
char grid[27][20][20];
char inp[1201][20];
int dp[1201];
string option[1201];
 
void solve19(int at) {
	if (at + 19 + 19 > N && at + 19 != N) return;
	int wrong = 1000000000;
	char letter = '0';
	For (i, 0, 27) {
 
		For (skip, 0, 20) {
			int curr = 0;
			For (j, 0, skip) For (k, 0, 20) {
				if (grid[i][j][k] != inp[at+j+1][k]) curr++;
			}
			For (j, skip+1, 20) For (k, 0, 20) {
				if (grid[i][j][k] != inp[at+j][k]) curr++;
			}
			//w<< i s skip s curr<<e;
			if (curr < wrong) {
				wrong = curr;
				letter = 'A'+i-1;
				if (i == 0) letter = '_';
			}
		}
	}
 
	if (wrong > 120) letter = '?';
	//w<< wrong<<e;
	if (wrong+dp[at] < dp[at+19]) {
		dp[at+19] = wrong+dp[at];
		option[at+19] = option[at]+letter;
	}
}
void solve20(int at) {
	if (at + 20 + 19 > N && at + 20 != N) return;
	int wrong = 1000000000;
	char letter = '0';
	For (i, 0, 27) {
		int curr = 0;
		For (j, 0, 20) For (k, 0, 20) {
			if (grid[i][j][k] != inp[at+j+1][k]) curr++;
		}
		if (curr < wrong) {
			wrong = curr;
			letter = 'A'+i-1;
			if (i == 0) letter = '_';
		}
		//w<< i s curr<<e;
	}
	if (wrong > 120) letter = '?';
	if (wrong+dp[at] < dp[at+20]) {
		dp[at+20] = wrong+dp[at];
		option[at+20] = option[at]+letter;
	}
}
void solve21(int at) {
	if (at + 21 + 19 > N && at + 21 != N) return;
	int wrong = 1000000000;
	char letter = '0';
	For (i, 0, 27) {
 
		For (skip, 0, 21) {
			int curr = 0;
			For (j, 0, skip) For (k, 0, 20) {
				if (grid[i][j][k] != inp[at+j+1][k]) curr++;
			}
			For (j, skip+1, 21) For (k, 0, 20) {
				if (grid[i][j-1][k] != inp[at+j+1][k]) curr++;
			}
			if (curr < wrong) {
				wrong = curr;
				letter = 'A'+i-1;
				if (i == 0) letter = '_';
			}
		}
	}
	//if (at == 0) w<< wrong<<e;
	if (wrong > 120) letter = '?';
	if (wrong+dp[at] < dp[at+21]) {
		dp[at+21] = wrong+dp[at];
		option[at+21] = option[at]+letter;
	}
}
 
main() {
    //ifstream ccc ("font.in");
	//ifstream cin ("charrec.in");
	//ofstream cout ("charrec.out");
	cin >> N;
	For (i, 0, 27) For (j, 0, 20) For (k, 0, 20) cin >> grid[i][j][k];
	cin >> N;
	ffi For (j, 0, 20) cin >> inp[i+1][j];
	For (i, 0, N+1) dp[i] = INF;
 
	dp[0] = 0;
	ffi {
		if (dp[i] != INF) {
			//w<< i s dp[i] s option[i]<<e;
			solve19(i);
			solve20(i);
			solve21(i);
		}
	}
 
	w<< option[N]<<e;
}