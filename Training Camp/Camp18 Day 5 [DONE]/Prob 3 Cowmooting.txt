#include<bits/stdc++.h>
using namespace std;
//#define int long long
#define For(i, a, b) for(int i=a; i<b; i++)
#define ffi For(i, 0, N)
#define ffj For(j, 0, M)
#define ffa ffi ffj
#define w cout
#define e "\n"
#define s <<" "<<
#define pb push_back
#define mp make_pair
#define a first
#define b second
/// 500,000,000
const int MAXN = 100, MAXT = 10000;
/// Global Variables
int N, M, B, dp[MAXN][10001];
vector<pair<int, pair<int, int> > > adj[MAXN];
bool vis[MAXN][10001];
priority_queue<pair<int, int > > next1; /// (-time, node)
 
main() {
    //ifstream cin("test.in");
    ios_base::sync_with_stdio(0); cin.tie(0);
    cin >> B >> M >> N;
    ffj {
        int a, b, c, d; cin >> a >> b >> d >> c;
        adj[a].pb(mp(b, mp(c, d))); adj[b].pb(mp(a, mp(c, d)));
    }
    ffi For (j, 0, MAXT+1) dp[i][j] = B+1;
    For (j, 0, MAXT+1) {
        dp[0][j] = 0;
        next1.push(mp(-j, 0));
        vis[0][j] = true;
    }
    while (!next1.empty()) {
        int tim = next1.top().a, at = next1.top().b; next1.pop();
        tim *= -1;
        //if (tim < 30) w<< at s tim s ":" s dp[at][tim]<<e;
        For (i, 0, adj[at].size()) {
            int x = adj[at][i].a, c = adj[at][i].b.a, t = adj[at][i].b.b;
            //w<< tim s t s ":" s MAXT<<e;
            if (tim + t > MAXT) continue;
            dp[x][tim+t] = min(dp[x][tim+t], dp[at][tim]+c);
            if (!vis[x][tim+t]) {
                vis[x][tim+t] = true;
                next1.push(mp(-tim-t, x));
            }
        }
    }
    int outt = MAXT+1;
    For (i, 0, MAXT+1) {
        if (dp[1][i] <= B && i < outt) {
            outt = i;
        }
    }
    if (outt == MAXT+1) outt = -1;
    w<< outt<<e;
}