#include<bits/stdc++.h>
using namespace std;
#define int long long
#define For(i, a, b) for(int i=a; i<b; i++)
#define ffi For(i, 0, N)
#define ffj For(j, 0, M)
#define ffa ffi ffj
#define w cout
#define e "\n"
#define s <<" "<<
#define pb push_back
#define mp make_pair
#define a first
#define b second
/// 500,000,000
const int MAXN = 500001, MOD = 1000000007;
/// Global Variables
int T1, R1, C1, T2, R2, C2, mul1 = 10, mul2 = 100, mul3 = 1000, p1[MAXN], p2[MAXN], p3[MAXN], mi1[MAXN], mi2[MAXN], mi3[MAXN], out, h1;
vector<vector<vector<int> > > grid1, grid2;
vector<vector<vector<int> > > hsh1, hsh2;
 
int mI(int x, int y) {
    if (y == 0) return 1;
    int p = mI(x, y/2);
    p = p*p;
    p %= MOD;
    if (y%2 == 1) p *= x;
    p %= MOD;
    return p;
}
 
main() {
    //ifstream cin("test.in");
    ios_base::sync_with_stdio(0); cin.tie(0);
    p1[0] = p2[0] = p3[0] = 1;
    mi1[0] = mi2[0] = mi3[0] = 1;
    For (i, 1, MAXN) {
        p1[i] = mul1*p1[i-1], p1[i] %= MOD; mi1[i] = mI(p1[i], MOD-2);
        p2[i] = mul2*p2[i-1], p2[i] %= MOD; mi2[i] = mI(p2[i], MOD-2);
        p3[i] = mul3*p3[i-1], p3[i] %= MOD; mi3[i] = mI(p3[i], MOD-2);
    }
    cin >> T1 >> R1 >> C1;
    For (i, 0, T1+1) {
        vector<vector<int> > use1;
        grid1.pb(use1);
        hsh1.pb(use1);
        For (j, 0, R1+1) {
            vector<int> use2;
            grid1[i].pb(use2);
            hsh1[i].pb(use2);
            For (k, 0, C1+1) {
                grid1[i][j].pb(0);
                hsh1[i][j].pb(0);
            }
        }
    }
    For (i, 1, T1+1) For (j, 1, R1+1) For (k, 1, C1+1) cin >> grid1[i][j][k];
    cin >> T2 >> R2 >> C2;
    For (i, 0, T2+1) {
        vector<vector<int> > use1;
        grid2.pb(use1);
        hsh2.pb(use1);
        For (j, 0, R2+1) {
            vector<int> use2;
            grid2[i].pb(use2);
            hsh2[i].pb(use2);
            For (k, 0, C2+1) {
                grid2[i][j].pb(0);
                hsh2[i][j].pb(0);
            }
        }
    }
    For (i, 1, T2+1) For (j, 1, R2+1) For (k, 1, C2+1) cin >> grid2[i][j][k];
 
    if (C2 < C1 || R2 < R1 || T2 < T1) {w<< 0<<e; return 0;}
    For (i, 1, T1+1) For (j, 1, R1+1) For (k, 1, C1+1) {
        hsh1[i][j][k] = ( ((grid1[i][j][k]*p1[i])%MOD)*((p2[j]*p3[k])%MOD))%MOD;
        hsh1[i][j][k] += hsh1[i-1][j][k]+hsh1[i][j-1][k]+hsh1[i][j][k-1] - hsh1[i-1][j-1][k]-hsh1[i-1][j][k-1]-hsh1[i][j-1][k-1] + hsh1[i-1][j-1][k-1]+4*MOD;
        hsh1[i][j][k] %= MOD;
    }
    h1 = hsh1[T1][R1][C1];
    //w<< "h1:" s h1<<e;
    For (i, 1, T2+1) For (j, 1, R2+1) For (k, 1, C2+1) {
        hsh2[i][j][k] = (((grid2[i][j][k]*p1[i])%MOD)*((p2[j]*p3[k])%MOD))%MOD;
        //w<<"h2:" s i s j s k s ":" s hsh2[i][j][k] <<e;
        hsh2[i][j][k] += hsh2[i-1][j][k]+hsh2[i][j-1][k]+hsh2[i][j][k-1] - hsh2[i-1][j-1][k]-hsh2[i-1][j][k-1]-hsh2[i][j-1][k-1] + hsh2[i-1][j-1][k-1]+4*MOD;
        hsh2[i][j][k] %= MOD;
        //w<<"h2:" s i s j s k s ":" s hsh2[i][j][k] <<e;
    }
 
    For (i, T1, T2+1) For (j, R1, R2+1) For (k, C1, C2+1) {
        int val = (hsh2[i][j][k] - hsh2[i-T1][j][k]-hsh2[i][j-R1][k]-hsh2[i][j][k-C1] + hsh2[i-T1][j-R1][k]+hsh2[i-T1][j][k-C1]+hsh2[i][j-R1][k-C1] - hsh2[i-T1][j-R1][k-C1]+4*MOD)%MOD;
        assert(val > 0);
        //w << i s j s k s ":" s val<<e;
        val *= mi1[i-T1]; val %= MOD;
        val *= mi2[j-R1]; val %= MOD;
        val *= mi3[k-C1]; val %= MOD;
        //if (j == 5)w << i s j s k s ":" s val <<e;
        if (val == h1) out++;
    }
    w<< out<<e;
}