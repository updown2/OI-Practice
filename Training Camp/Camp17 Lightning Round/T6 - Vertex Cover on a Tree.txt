#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define For(i, a, b) for(ll i=a; i<b; i++)
#define ffi For(i, 0, N)
#define ffj For(j, 1, 7)
#define s <<" "<<
#define w cout
#define e endl
#define pb push_back
#define mp make_pair
#define a first
#define b second
//500,000,000 operations
//Global Variables
int N;
vector <vector<int> > adj;
int dp[100001][2];
bool visited[100001][2];
 
void dfs (int parent, int curr, int S) {
	if (!visited[S][curr]) {
		//cout << S << " " << curr << endl;
		visited[S][curr] = true;
		//dp[S][curr] = 0;
		int out = 0;
		int a = 0;
		For (i, 0, adj[S].size()) {
			if (adj[S][i] != parent) {
				if (curr == 1) {
					dfs(S, 0, adj[S][i]);
					dfs(S, 1, adj[S][i]);
					a = min(dp[adj[S][i]][0],  dp[adj[S][i]][1]);
				}
				else {
					dfs(S, 1, adj[S][i]);
					a = dp[adj[S][i]][1];
				}
				out += a;
			}
		}
		if (curr == 1) out++;
		dp[S][curr] = out;
	}
}
 
int main() {
	//ifstream cin ("test.in");
 
	vector<int> use;
	cin >> N;
 
	For (i, 0, N+1) adj.push_back(use);
 
	For (i, 1, N) {
		int a, b;
		cin >> a >> b;
		adj[a].push_back(b);
		adj[b].push_back(a);
		dp[i][0] = 0;
		dp[i][1] = 0;
		visited[i][0] = false;
		visited[i][1] = false;
	}
 
	dfs(0, 0, 1);
	dfs(0, 1, 1);
	w << min(dp[1][1], dp[1][0]) << e;
}