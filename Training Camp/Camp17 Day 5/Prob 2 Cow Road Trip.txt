#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define For(i, a, b) for(int i=a; i<b; i++)
#define ffi For(i, 0, N)
#define ffj For(j, 0, M)
#define s <<" "<<
#define w cout
#define e "\n"
#define mp make_pair
#define a first
#define b second
#define pb push_back
#define int ll
const int MAXN=100000, INF=10000000000;
///500,000,000
int N, dp[MAXN][2], out, last[MAXN];
priority_queue<pair<int, pair<int, int> > > next1; /// (-w, (a, b))

main() {
	//ifstream cin("test.in");
	ios_base::sync_with_stdio(0); cin.tie(0);
	cin >> N;
	For (i, 1, N) {
        int a, b, c; cin >> a >> b >> c; a--; b--;
        next1.push(mp(-c, mp(a, b)));
	}
	while (!next1.empty()) {
        int a = next1.top().b.a, b = next1.top().b.b, c = -next1.top().a;
        next1.pop();
        int b0 = dp[b][0], b1 = dp[b][1];
        if (c == last[a]) {
            /// add dp[a][0]
            if (c == last[b]) {
                dp[b][1] += 1 + dp[a][0];
                dp[a][1] += 1 + b0;
            }
            else {
                dp[b][0] += dp[b][1], dp[b][1] = 1 + dp[a][0];
                dp[a][1] += 1 + b0+b1;
            }
        }
        else {
            if (c == last[b]) {
                dp[b][1] += 1 + dp[a][0] + dp[a][1];
                dp[a][0] += dp[a][1], dp[a][1] = 1 + b0;
            }
            else {
                dp[b][0] += dp[b][1], dp[b][1] = 1 + dp[a][0] + dp[a][1];
                dp[a][0] += dp[a][1], dp[a][1] = 1 + b0 + b1;
            }
        }
        last[a] = last[b] = c;
	}
	ffi out += dp[i][0] + dp[i][1];
	w<< out<<e;
}