#include <iostream>
#include <string>
#include <sstream>
#include <iomanip>
#include <cmath>
#include <algorithm>
#include <fstream>
#include <set>
#include <vector>
using namespace std;

//Global Variables
int N;
set< int > xset;
set<int>::iterator it;
set<int>::iterator it2;
set< int > yset;
int xvals[1000];
int yvals[1000];


int compute_m (int a, int b) {
	a++; b++;
	int ul = 0; int ur = 0; int ll = 0; int lr = 0;
	for (int i=0; i<N; i++) {
		if (yvals[i] > b) {
			if (xvals[i] > a) {
				ur ++;
			}
			else {
				ul ++;
			}
		}
		else {
			if (xvals[i] > a) {
				lr ++;
			}
			else {
				ll ++;
			}
		}
	}
	int out = max(ul, ur); out = max(out, ll); out = max(out, lr);
	return out;
}



int main() {
	ifstream cin ("balancing.in");
	ofstream fout ("balancing.out");
	int B;
	cin >> N >> B;
	
	for (int i=0; i<N; i++) {
		cin >> xvals[i] >> yvals[i];
		xset.insert(xvals[i]);
		yset.insert(yvals[i]);
	}
	
	int out = N;
	for (it=xset.begin(); it!=xset.end(); ++it){
		int small = N;
		int p_m = N;
		for (it2=yset.begin(); it2 != yset.end(); ++it2) {
			int a = *it; int b = *it2;
			int m = compute_m(a, b);
			cout << a << " " << b << " " << m << endl;
			out = min(out, m);
			small = min(small, m);
			if (m > p_m) {
				break;
			}
			p_m = m;
		}
		
	}
	fout << out << endl;

		
    return 0;
}

